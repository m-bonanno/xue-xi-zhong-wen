[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "chinese-grammar-wiki-formatter"
description = "Markdown formatter specifically designed for Chinese Grammar Wiki"
readme = "FORMATTER_README.md"
license = {text = "MIT"}
authors = [
    {name = "Chinese Grammar Wiki Team"},
]
keywords = ["markdown", "formatter", "chinese", "grammar", "documentation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "Intended Audience :: Education",
    "Topic :: Documentation",
    "Topic :: Text Processing :: Markup",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7", 
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.6"
dependencies = []
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.0",
    "pytest-cov>=2.12.0",
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.812",
    "isort>=5.8.0",
]

[project.scripts]
format-md = "format_markdown:main"
wiki-utils = "wiki_utils:main"

[project.urls]
Homepage = "https://github.com/m-bonanno/xue-xi-zhong-wen"
Repository = "https://github.com/m-bonanno/xue-xi-zhong-wen"
Issues = "https://github.com/m-bonanno/xue-xi-zhong-wen/issues"
Documentation = "https://github.com/m-bonanno/xue-xi-zhong-wen/blob/main/FORMATTER_README.md"

[tool.setuptools_scm]
write_to = "_version.py"

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38', 'py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.6"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests", "test_formatter.py"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["format_markdown", "wiki_utils"]
omit = ["test_*.py", "*_test.py", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
